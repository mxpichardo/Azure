{
    "$schema": "https://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "Workspace": {
            "type": "string",
            "metadata": {
                "description": "The Microsoft Sentinel workspace into which the function will be deployed. Has to be in the selected Resource Group."
            }
        },
        "WorkspaceRegion": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "The region of the selected workspace. The default value will use the Region selection above."
            }
        }
    },
    "resources": [
        {
            "type": "Microsoft.OperationalInsights/workspaces",
            "apiVersion": "2017-03-15-preview",
            "name": "[parameters('Workspace')]",
            "location": "[parameters('WorkspaceRegion')]",
            "resources": [
                {
                    "type": "savedSearches",
                    "apiVersion": "2020-08-01",
                    "name": "ASimAuthenticationSshd",
                    "dependsOn": [
                        "[concat('Microsoft.OperationalInsights/workspaces/', parameters('Workspace'))]"
                    ],
                    "properties": {
                        "etag": "*",
                        "displayName": "Authentication ASIM parser for Syslog sshd",
                        "category": "ASIM",
                        "FunctionAlias": "ASimAuthenticationSshd",
                        "query": "let SSHDSignInAuthorized=(disabled:bool=false){\nSyslog | where not(disabled)\n  | where ProcessName == \"sshd\" and SyslogMessage has 'Accepted '\n  | extend\n  EventVendor = 'OpenBSD'\n  , EventProduct = 'sshd'\n  , EventCount = int(1)\n  , EventSchema = 'Authentication'\n  , EventSchemaVersion = '0.1.1'\n  , EventResult = 'Success'\n  , EventStartTime = TimeGenerated\n  , EventEndTime = TimeGenerated\n  , EventType = 'Logon'\n  , DvcHostname = Computer\n  //, DvcIpAddr = extract(@'\\d{1,3}\\.\\d{1.3}\\.\\d{1,3}\\.\\d{1,3}', 1, SyslogMessage)\n  , DvcIpAddr = extract(\"from (([0-9]{1,3})\\\\.([0-9]{1,3})\\\\.([0-9]{1,3})\\\\.(([0-9]{1,3}))) port\",1,SyslogMessage)\n  , TargetUsernameType = 'Simple'\n  , TargetUsername = extract(@'for (.*?) from', 1, SyslogMessage)\n  , EventResultDetails = 'Other'\n  , EventOriginalRestultDetails = 'Connection authorized'\n// ************************\n//      <Aliases>\n// ************************\n| extend\n        User=TargetUsername\n      , Dvc=Computer\n// ************************\n//      </Aliases>\n// ************************\n  | project-away Computer, MG, SourceSystem, TenantId\n  };\nlet SSHDAuthFailure1=(disabled:bool=false){\nSyslog | where not(disabled)\n  | where ProcessName == \"sshd\" and SyslogMessage has 'Failed '\n  | extend\n  EventVendor = 'OpenBSD'\n  , EventProduct = 'sshd'\n  , EventCount = int(1)\n  , EventSchema = 'Authentication'\n  , EventSchemaVersion = '0.1.1'\n  , EventResult = 'Failure'\n  , EventStartTime = TimeGenerated\n  , EventEndTime = TimeGenerated\n  , EventType = 'Logon'\n  , DvcHostname = Computer\n  //, DvcIpAddr = extract(@'from \\d{1,3}\\.\\d{1.3}\\.\\d{1,3}\\.\\d{1,3} port', 1, SyslogMessage)\n  , DvcIpAddr = extract(\"from (([0-9]{1,3})\\\\.([0-9]{1,3})\\\\.([0-9]{1,3})\\\\.(([0-9]{1,3}))) port\",1,SyslogMessage)\n  , TargetUsernameType = 'Simple'\n  , TargetUsername = extract(@'for (invalid user )?(.*?) from', 2, SyslogMessage)\n  , EventResultDetails = 'No such user or password'\n  , EventOriginalRestultDetails = 'User authentication failed'\n  | project-away Computer, MG, SourceSystem, TenantId\n  };\nlet SSHDDisconnect=(disabled:bool=false){\nSyslog | where not(disabled)\n  | where ProcessName == \"sshd\" and SyslogMessage has 'session closed for user '\n  | extend\n  EventVendor = 'OpenBSD'\n  , EventProduct = 'sshd'\n  , EventCount = int(1)\n  , EventSchema = 'Authentication'\n  , EventSchemaVersion = '0.1.1'\n  , EventResult = 'Success'\n  , EventStartTime = TimeGenerated\n  , EventEndTime = TimeGenerated\n  , EventType = 'Logoff'\n  , DvcHostname = Computer\n  , TargetUsernameType = 'Simple'\n  , TargetUsername = extract('for user (.*?)$', 1, SyslogMessage)\n  , EventResultDetails = 'Other'\n  , EventOriginalRestultDetails = 'User session closed'\n// ************************\n//      <Aliases>\n// ************************\n| extend\n        User=TargetUsername\n      , Dvc=Computer\n// ************************\n//      </Aliases>\n// ************************\n  | project-away Computer, MG, SourceSystem, TenantId\n  };\nunion isfuzzy=false SSHDSignInAuthorized(disabled), SSHDAuthFailure1(disabled), SSHDDisconnect(disabled)\n",
                        "version": 1,
                        "functionParameters": "disabled:bool=False"
                    }
                }
            ]
        }
    ]
}
