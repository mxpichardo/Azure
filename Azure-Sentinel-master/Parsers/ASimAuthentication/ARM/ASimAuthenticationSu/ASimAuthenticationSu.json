{
    "$schema": "https://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "Workspace": {
            "type": "string",
            "metadata": {
                "description": "The Microsoft Sentinel workspace into which the function will be deployed. Has to be in the selected Resource Group."
            }
        },
        "WorkspaceRegion": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "The region of the selected workspace. The default value will use the Region selection above."
            }
        }
    },
    "resources": [
        {
            "type": "Microsoft.OperationalInsights/workspaces",
            "apiVersion": "2017-03-15-preview",
            "name": "[parameters('Workspace')]",
            "location": "[parameters('WorkspaceRegion')]",
            "resources": [
                {
                    "type": "savedSearches",
                    "apiVersion": "2020-08-01",
                    "name": "ASimAuthenticationSu",
                    "dependsOn": [
                        "[concat('Microsoft.OperationalInsights/workspaces/', parameters('Workspace'))]"
                    ],
                    "properties": {
                        "etag": "*",
                        "displayName": "Authentication ASIM parser for Syslog su",
                        "category": "ASIM",
                        "FunctionAlias": "ASimAuthenticationSu",
                        "query": "let SuSignInAuthorized=(disabled:bool=false){\nSyslog | where not(disabled)\n  | where ProcessName == \"su\" and (SyslogMessage has 'pam_unix(su:session): session opened' or SyslogMessage has 'pam_unix(su-l:session): session opened')\n  | parse SyslogMessage with \"for user \" TargetUsername \" by \" ActorUsername\n  | extend\n  EventVendor = 'su'\n  , EventProduct = 'su'\n  , EventCount = int(1)\n  , EventSchema = 'Authentication'\n  , EventSchemaVersion = '0.1.1'\n  , EventResult = 'Success'\n  , EventStartTime = TimeGenerated\n  , EventEndTime = TimeGenerated\n  , EventType = 'Logon'\n  , DvcHostname = Computer\n  , ActorUsernameType = 'Simple'\n  , EventResultDetails = 'Other'\n  , EventOriginalRestultDetails = 'Connection authorized'\n// ************************\n//      <Aliases>\n// ************************\n| extend\n        User=TargetUsername\n      , Dvc=Computer\n// ************************\n//      </Aliases>\n// ************************\n  | project-away Computer, MG, SourceSystem, TenantId\n  };\nlet SuDisconnect=(disabled:bool=false){\nSyslog | where not(disabled)\n  | where ProcessName == \"su\" and (SyslogMessage has 'pam_unix(su:session): session closed' or SyslogMessage has 'pam_unix(su-l:session): session closed')\n  | parse SyslogMessage with \"for user \" TargetUsername\n  | extend\n  EventVendor = 'su'\n  , EventProduct = 'su'\n  , EventCount = int(1)\n  , EventSchema = 'Authentication'\n  , EventSchemaVersion = '0.1.1'\n  , EventResult = 'Success'\n  , EventStartTime = TimeGenerated\n  , EventEndTime = TimeGenerated\n  , EventType = 'Logoff'\n  , DvcHostname = Computer\n  , TargetUsernameType = 'Simple'\n  , EventResultDetails = 'Other'\n  , EventOriginalRestultDetails = 'User session closed'\n// ************************\n//      <Aliases>\n// ************************\n| extend\n        User=TargetUsername\n      , Dvc=Computer\n// ************************\n//      </Aliases>\n// ************************\n  | project-away Computer, MG, SourceSystem, TenantId\n  };\nunion isfuzzy=false SuSignInAuthorized(disabled), SuDisconnect(disabled)\n",
                        "version": 1,
                        "functionParameters": "disabled:bool=False"
                    }
                }
            ]
        }
    ]
}
